# This is the main configuration file for the application.
# ~~~~~
application.name=wgk

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
application.mode=dev
%prod.application.mode=prod

#
# 系统默认的AppMode配置
#
app.mode=TEST
%prod.app.mode=ONLINE
%test.app.mode=TEST

#
# 读取默认配置的文件，若需要在功能开发时自定义一组逻辑开关，
# 可以从init-appmode.yml复制出一份自行修改（并加入.gitignore），并在personal.conf中修改以下配置项
app.mode.yml=init-appmode.yml

%prod.plugins.disable.0=play.i18n.MessagesPlugin
# 暂时无法禁用JPA，会影响模板渲染
#plugins.disable.1=play.db.jpa.JPAPlugin

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=voBfekz4U9HZkfMhm479IfblEs23Z2XgKpaWAOHh4P5906Hm8U9u9AVb9T3lMjin

# Date format
# ~~~~~
date.format=yyyy-MM-dd HH:mm:ss
http.port=9000

# Using Nginx as frontend forward
XForwardedSupport=127.0.0.1,10.0.0.25

#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
# http.address=127.0.0.1
#
# Use this if you don't host your Play application at the root of the domain
# you're serving it from. This parameter has no effect when deployed as a
# war, because the path will be handled by the application server.
# http.path=/

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
#application.session.secure=true
application.session.cookie=TOMCAT
application.session.maxAge=1h
application.session.httpOnly=true

# Session/Cookie sharing between subdomain
# ~~~~~~~~~~~~~~~~~~~~~~
# By default a cookie is only valid for a specific domain. By setting
# application.defaultCookieDomain to '.example.com', the cookies
# will be valid for all domains ending with '.example.com', ie:
# foo.example.com and bar.example.com
# application.defaultCookieDomain=.example.com

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6,1.7 or 1.8 (experimental)
# java.source=1.5

#
# More logging configuration
application.log.path=/log4j.properties
application.log.system.out=off

# Database configuration
# ~~~~~ 
%prod.db.default.url=jdbc:mysql://localhost:3306/digg?autoReconnect=true&useUnicode=true&characterEncoding=utf-8
db.default.driver=com.mysql.jdbc.Driver
db.default.user=dev
db.default.pass=dev
#
# Connections pool configuration :
db.default.pool.timeout=1000
db.default.pool.maxSize=30
db.default.pool.minSize=10

#
# When using an existing Datasource, it's sometimes needed to destroy it when
# the application is stopped. Depending on the datasource, you can define a
# generic "destroy" method :
# db.default.destroyMethod=close
mybatis.config=mybatis-config.xml

#
# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212
#
# Use plain SASL to authenticate for memcached
# memcached.user=
# memcached.password=

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# Default engine is Async Http Client, uncomment to use
# the JDK's internal implementation
# webservice = urlfetch
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
#mail.smtp=mock
mail.smtp.host=smtp.exmail.qq.com
mail.smtp.user=service@jzniu.cn
mail.smtp.pass=Iphone4S
mail.smtp.channel=ssl

# Url-resolving in Jobs
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
%test.application.baseUrl=http://jzniu.cn/
application.baseUrl=http://jzniu.cn/
%prod.application.baseUrl=http://jzniu.cn/

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Netty pipeline configuration (advanced settings)
# You can default netty settings by overriding the following line. Each handler must be comma separated.
# The last value must be the PlayHandler class (or your own that extends PlayHandler)
# Default values are
# play.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.PlayHandler
# For example, to enable Netty response compression
# play.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.codec.http.HttpContentCompressor,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.PlayHandler
# For SSL, use the play.ssl.netty.pipeline property
# play.ssl.netty.pipeline = play.server.FlashPolicyHandler,org.jboss.netty.handler.codec.http.HttpRequestDecoder,play.server.StreamChunkAggregator,org.jboss.netty.handler.codec.http.HttpResponseEncoder,org.jboss.netty.handler.codec.http.HttpContentCompressor,org.jboss.netty.handler.stream.ChunkedWriteHandler,play.server.ssl.SslPlayHandler

# 业务后端服务
biz.host=127.0.0.1
biz.port=9000

#七牛云存储
qiniu.access_key=XMk-ueUhwy6WOTkUp8swshoNTWKxSiC_bW_jMXVM
qiniu.secret_key=8lX3BtZoeLT_XEdFPUjYzJu0QBREJm40f7jhgBoQ

# 快钱支付
kqpay.merchant_id=1007896735101
kqpay.secret.pass=888666
kqpay.secret.pfx=pay/99bill-rsa.pfx
kqpay.secret.cer=pay/99bill.cert.rsa.20340630.cer

#流量任务接口
#flow.appkey=test
#flow.appsecret=a9d11a189099ac9b483ab982e849e939
flow.appkey=waguke
flow.appsecret=36f987fb3bb3a60b3a1ec64990615f3d
#系统规则配置
BUYER_AND_SELLER_TIME=7
BUYER_AND_SHOP_TIME= 10
BUYER_ACOUNT_AND_SHOP_TIME = 20
BUYER_ACOUNT_AND_ITEM_TIME = 60
BUYER_TASK_DAY_COUNT = 5
BUYER_TASK_WEEK_COUNT = 30
BUYER_TASK_MONTH_COUNT = 90

BUYER_TASK_DAY_COUNT2 = 30
BUYER_TASK_WEEK_COUNT2 = 210
BUYER_TASK_MONTH_COUNT2 = 300

# Testing. Set up a custom configuration for test mode
# ~~~~~
#%test.app.mode=TEST

#%test.module.cobertura=${play.path}/modules/cobertura
%test.application.mode=dev
%test.mail.smtp=mock

@include.personal=personal.conf
