<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="models.mappers.NoticeMapper">
	<resultMap id="BaseResultMap" type="models.Notice">
	</resultMap>

	<sql id="where">
		<where>
			<if test="isDisplay !=null">
				and n.is_display = #{isDisplay}
			</if>
			<if test="id !=null">
				and n.id=#{id}
			</if>
			<if test="title !=null">
				and n.title like '%${title}%'
			</if>
			<if test="roles !=null">
				and n.role in
				<foreach collection="roles" item="listItem" open="("
					close=")" separator=",">
					#{listItem}
				</foreach>
			</if>
			<if test="type !=null">
				and n.type = #{type}
			</if>
			<if test="createTimeStart !=null">
				<![CDATA[ and n.create_time>=#{createTimeStart} ]]>
			</if>
			<if test="createTimeEnd !=null">
				<![CDATA[ and n.create_time<=#{createTimeEnd} ]]>
			</if>
		</where>
	</sql>
	
	<select id="selectList" resultMap="BaseResultMap">
		select id,type,title,content,is_display,sort_num,admin_id,create_time,modify_time from notice n
		<include refid="where"/>
		order by n.top_time desc
		limit #{startIndex}, #{pageSize}
	</select>
	<select id="count" resultType="java.lang.Integer">
		select count(1) from notice n
		<include refid="where"/>
	</select>

	<update id="updateById" parameterType="models.Notice">
		update notice
		<set>
			modify_time = #{modifyTime},
			<if test="title != null">
				title = #{title},
			</if>
			<if test="url != null">
				url = #{url},
			</if>
			<if test="role != null">
				role = #{role},
			</if>
			<if test="content != null and content !=''">
				content = #{content},
			</if>
			<if test="isDisplay != null">
				is_display = #{isDisplay},
			</if>
			<if test="sortNum != null">
				sort_num = #{sortNum},
			</if>
			<if test="topTime != null">
				top_time = #{topTime},
			</if>
		</set>
		where id = #{id} 
	</update>
	
	
	<select id="selectDisplayList" resultMap="BaseResultMap">
		select id,type,title,create_time,modify_time from notice n
		where is_display = true and role in (#{role}, 'ALL') 
		order by sort_num, n.create_time desc
		limit #{num}
	</select>

</mapper>
	